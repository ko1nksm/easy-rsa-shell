#!/bin/sh -eu

abort() { printf "\033[01;31m%s\033[m\n" "$@" >&2; exit 1; }
normalizepath() {
  case $(uname -a) in (*[Mm]icrosoft*)
    wslpath -ma "$(realpath "$1")"
    return
  esac

  case $1 in
    /*) printf '%s\n' "$1" ;;
    *) printf '%s\n' "${PWD%/}/$1" ;;
  esac
}
fileid() {
  fileid=$(stat -f /)
  if [ "$fileid" = / ]; then
    stat -f "%d#%i" "$1"
  else
    stat -c "%d#%i" "$1"
  fi
}

${__SOURCED__:+return}

{
  sleep 2
  echo "Building easy-rsa-shell docker image. Wait for seconds..."
} &
pid=$!

(
  cd "$(dirname "$0")"
  docker build -q -t easy-rsa-shell ./ > /dev/null
) &&:
es=$?
kill "$pid" 2>/dev/null ||:
wait "$pid" 2>/dev/null ||:
[ "$es" -eq 0 ] || exit "$es"

file="" id=""
case ${1:-} in ([!-]*)
  file=$1 && shift
  [ -e "$file" ] || touch "$file"
  id=$(fileid "$file")
esac

case ${1:-} in (-* | "")
  set -- -it --rm easy-rsa-shell easy-rsa-shell "$@"
  set -- -e EASY_RSA_SHELL_PASSWORD -e EASY_RSA_SHELL_ALLOW_WEAK_PASSWORD "$@"
  if [ "$file" = "" ]; then
    docker run "$@"
    exit 0
  fi
  normalizee_path=$(normalizepath "$file") tmp="$id-tmp"
  if [ -e "$file.$tmp" ]; then
    abort "File '$file.$tmp' already exists." \
          "Delete it manually if it is not opened by another process."
  fi
  trap "" INT
  (set -C && cat "$file" > "$file.$tmp")
  set -- -e DATAFILE="$id" --label=easy-rsa-shell="$id" "$@"

  error=""
  docker run --privileged -v "$normalizee_path.$tmp:/$id" "$@" || error=$?
  if [ "$error" ]; then
    rm "$file.$tmp"
  else
    mv "$file.$tmp" "$file"
  fi
  exit ${error:-0}
esac

cid=$(docker ps -q --filter label=easy-rsa-shell="$id")
[ "$cid" ] || abort "Data file is not open."

if [ "$1" = "password" ]; then
  docker exec -it "$cid" easy-rsa-shell "$@"
else
  docker exec -i "$cid" easy-rsa-shell "$@"
fi
