#!/bin/sh -eu

abort() { printf "\033[01;31m%s\033[m\n" "$@" >&2; exit 1; }

type docker >/dev/null 2>&1 || abort "Requires docker."

abspath() {
  case $1 in
    /*) printf '%s\n' "$1" ;;
    *) printf '%s\n' "$PWD/$1" ;;
  esac
}

{
  sleep 2
  echo "Building easy-rsa-shell docker image. Wait a minute..."
} &
pid=$!

(
  cd "$(dirname "$0")"
  docker build -q -t easy-rsa-shell ./ > /dev/null
) &&:
es=$?
kill "$pid" 2>/dev/null ||:
wait "$pid" 2>/dev/null ||:
[ "$es" -eq 0 ] || exit "$es"

file=""
case ${1:-} in ([!-]*)
  file=$1 && shift
  [ -e "$file" ] || touch "$file"
esac

case ${1:-} in (-* | "")
  set -- -it easy-rsa-shell easy-rsa-shell "$@"
  if [ "$file" = "" ]; then
    docker run --rm "$@"
    exit 0
  fi

  file=$(abspath "$file")
  if ! (set -C; : > "$file.lock") 2>/dev/null; then
    abort "File '${file##*/}' already opened. If it is not opened by" \
          "another process really, delete '${file##*/}.lock' manually."
  fi

  set -- -e EASY_RSA_SHELL_PASSWORD -e EASY_RSA_SHELL_ALLOW_WEAK_PASSWORD "$@"
  cid=$(docker create --privileged -v /data "$@")
  echo "$cid" > "$file.lock"
  error="" datafile=$(echo "$cid" | cut -c-12)
  docker cp "$file" "$cid:/data/$datafile"
  docker start -ai "$cid" || error=$?
  if [ ! "$error" ] && [ -e "$file.lock" ]; then
    docker cp "$cid:/data/$datafile" "$file.tmp"
    mv "$file.tmp" "$file"
  fi
  rm -f "$file.lock"
  docker rm -v "$cid" > /dev/null
  exit ${error:-0}
esac

cid=$(cat "$file.lock" 2>/dev/null) || abort "Data file is not open."

set -- -i "$cid" easy-rsa-shell "$@"
[ "$4" = "password" ] && set -- -t -e EASY_RSA_SHELL_ALLOW_WEAK_PASSWORD "$@"
docker exec "$@"
