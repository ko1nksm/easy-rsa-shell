#!/bin/sh -eu

trap : INT

abort() { printf "\033[01;31m%s\033[m\n" "$@" >&2; exit 1; }

passphrase() {
  trap : INT

  passphrase="" confirmation=""

  if [ "${EASY_RSA_SHELL_PASSWORD:-}" ]; then
    printf '%s\n' "$EASY_RSA_SHELL_PASSWORD"
    return
  fi

  stty -echo
  printf 'Enter passphrase:' >&2
  read -r passphrase
  printf "\n" >&2
  stty echo

  if [ "${1:-}" = "--with-confirmation" ]; then
    if ! error=$(checkpassword "$passphrase" 50 2>&1); then
      error=$(echo "$error" | sed -E "s/(pass)word/\1phrase/gi")
      abort "$error"
    fi

    stty -echo
    printf 'Re enter passphrase:' >&2
    read -r confirmation
    printf "\n" >&2
    stty echo

    [ "$passphrase" = "$confirmation" ] || abort "Passphrases do not match"
  fi

  printf '%s\n' "$passphrase"
}

get_zulucrypt_device() {
  for device in /dev/mapper/zuluCrypt*; do
    device_path=$(zuluCrypt-cli -P -d "$device")
    [ "$device_path" = "$1" ] && echo "$device" && return 0
  done
  return 1
}

case $1 in
  create)
    [ -s "$2" ] && abort "File '$2' already created"
    passphrase=$(passphrase --with-confirmation)
    echo "Wait a few seconds..."
    dd if=/dev/zero of="$2" bs=${4:-10M} count=1 status=none
    zuluCrypt-cli -c -d "$2" -k -z ntfs -t vcrypt -p "$passphrase" > /dev/null
    ;;
  mount)
    [ -e "$2" ] || abort "File '$2' does not exist"
    passphrase=$(passphrase)
    ;;
esac

case $1 in
  create | mount)
    zuluCrypt-cli -O -d "$2" -t vcrypt -p "$passphrase"
    device=$(get_zulucrypt_device "$2")
    mount -t ntfs -o permissions,windows_names "$device" "$3"
    echo "The encrypted volume was mounted at the '$3' directory"
    ;;
  unmount)
    mountpoint -q "$3" && umount "$3" ||:
    zuluCrypt-cli -q -d "$2" ||:
    ;;
esac
